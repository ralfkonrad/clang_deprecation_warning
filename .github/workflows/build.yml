name: build

on:
  push: {}
  workflow_dispatch: {}

jobs:
  build:
    name: "Build (${{ matrix.settings.cxx }}, ${{ matrix.preset }}, ${{ matrix.settings.os }})"

    strategy:
      fail-fast: false
      matrix:
        settings:
          [
            { os: ubuntu-24.04, cc: clang-18, cxx: clang++-18 },
            { os: ubuntu-24.04, cc: clang-17, cxx: clang++-17 },
            { os: ubuntu-24.04, cc: clang-16, cxx: clang++-16 },

            { os: ubuntu-24.04, cc: gcc-14,   cxx: g++-14     },
            { os: ubuntu-24.04, cc: gcc-13,   cxx: g++-13     },
            { os: ubuntu-24.04, cc: gcc-12,   cxx: g++-12     },

            { os: windows-2022, cc: cl,       cxx: cl         },
          ]
        preset:
          - release
          - debug
        
    runs-on: ${{ matrix.settings.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      - name: Compiler version (Linux)
        if: runner.os == 'Linux'
        run: |
          ${{ matrix.settings.cc }} --version
        
      - name: Setup Windows
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja

      - name: Set up Visual Studio shell on Windows
        uses: TheMrMilchmann/setup-msvc-dev@v3
        if: runner.os == 'Windows'
        with:
          arch: x64
           
      - name: Compiler version (Windows)
        if: runner.os == 'Windows'
        run: |
          ${{ matrix.settings.cc }}
          
      - name: Build
        env:
          CC: ${{ matrix.settings.cc }}
          CXX: ${{ matrix.settings.cxx }}
        run: |
          cmake --preset ${{ matrix.preset }} -L
          cmake --build --preset ${{ matrix.preset }} -v -- -k0

      - name: Test
        run: |
          ctest --preset ${{ matrix.preset }}
